<?php

namespace Tests\Feature\Client;

use App\Interfaces\Models\ProductInterface;
use App\Models\Product;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Artisan;
use Tests\TestCase;

class ProductTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->actingAs(
            User::factory()->create()
        );
    }

    public function test_client_get_product_list()
    {
        Product::factory($count = 10)->create();

        $this->getJson(route('products.clientProductList'));
        $this->assertDatabaseCount(ProductInterface::TABLE, $count);
    }

    public function test_client_can_get_a_product_successfully()
    {
        $product = Product::factory()->create([ProductInterface::PUBLISHED => true]);

        $this->getJson(route('products.clientProductShow', $product))
            ->assertSuccessful()
            ->assertJsonPath('data.name', $product->getName());
    }

    public function test_client_can_not_get_a_product_because_of_not_published()
    {
        $product = Product::factory()->create([ProductInterface::PUBLISHED => false]);

        $this->getJson(route('products.clientProductShow', $product))
            ->assertNotFound();
    }
}
